(()=>{"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var t=function t(n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e(this,"enableValidation",(function(){o._setEventListeners()})),e(this,"_setEventListeners",(function(){o._form.addEventListener("input",(function(){o._checkFormValidity()})),o._allInputs.forEach((function(e){e.addEventListener("input",(function(){o._checkInputValidity(e)}))}))})),e(this,"_checkFormValidity",(function(){o._allInputs.some((function(e){return!e.validity.valid}))?o._disableSubmit():o._enableSubmit()})),e(this,"_disableSubmit",(function(){o._button.classList.add(o._inactiveButtonClass),o._button.setAttribute("disabled","disabled")})),e(this,"_enableSubmit",(function(){o._button.classList.remove(o._inactiveButtonClass),o._button.removeAttribute("disabled","disabled")})),e(this,"_checkInputValidity",(function(e){var t=o._getErrorString(e);t.textContent=e.validationMessage,e.validity.valid?o._hideInputError(e,t):o._showInputError(e,t)})),e(this,"_showInputError",(function(e,t){e.classList.add(o._inputErrorClass),t.classList.add(o._errorMessageClass)})),e(this,"_hideInputError",(function(e,t){e.classList.remove(o._inputErrorClass),t.classList.remove(o._errorMessageClass)})),e(this,"_getErrorString",(function(e){return o._form.querySelector(".".concat(e.id,"-error"))})),e(this,"checkFormState",(function(){o._allInputs.forEach((function(e){o._checkFormValidity(e);var t=o._getErrorString(e);o._hideInputError(e,t)}))})),this._form=r,this._submitButtonSelector=n.submitButtonSelector,this._button=r.querySelector(this._submitButtonSelector),this._allInputs=Array.from(r.querySelectorAll(n.inputSelector)),this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorMessageClass=n.errorMessageClass};function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._cardSelector=n,this._handleCardClick=r,this._handleCardDelete=o,this._handleCardLike=i,this.likes=t.likes,this._userId=a,this.cardId=t._id,this.owner=t.owner}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._like=this._element.querySelector(".element__like"),this._likeCounter=this._element.querySelector(".element__like-counter"),this._cardImage=this._element.querySelector(".element__photo"),this.buttonDeleteCard=this._element.querySelector(".element__delete-icon"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._setEventListeners(),this._element}},{key:"isLiked",value:function(){var e=this;return this.likes.some((function(t){return t._id===e._userId}))}},{key:"_checkOwner",value:function(){this.owner._id!==this._userId&&this.buttonDeleteCard.remove()}},{key:"handleToggleLike",value:function(){this.isLiked()?this._like.classList.add("element__like_active"):this._like.classList.remove("element__like_active")}},{key:"updateLikes",value:function(e){this._likeCounter.textContent=e}},{key:"deleteMePlease",value:function(){this.buttonDeleteCard.closest(".element").remove()}},{key:"_setEventListeners",value:function(){var e=this;this._like.addEventListener("click",(function(){e._handleCardLike(e)})),this.buttonDeleteCard.addEventListener("click",(function(){e._handleCardDelete(e)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"createCard",value:function(){return this._getTemplate(),this.generateCard(),this.handleToggleLike(),this.updateLikes(this.likes.length),this._checkOwner(),this._setEventListeners(),this._element}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"reverseItem",value:function(e){this._container.append(e)}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){var n=t.userNameSelector,r=t.userInfoSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(r),this._userAvatar=document.querySelector(o),this._userId=""}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,info:this._userInfo.textContent}}},{key:"setUserInfo",value:function(e,t,n){this._userName.textContent=e,this._userInfo.textContent=t,this._userId=n}},{key:"getUserId",value:function(){return this._userId}},{key:"setUserAvatar",value:function(e){this._userAvatar.src=e}}])&&a(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__button-close"))&&o.close()},(n="_handlerClickClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handlerClickClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handlerClickClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(this._popup)}},{key:"setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._handlerClickClose)}}])&&c(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?d(e):t}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){e.preventDefault(),n._handlerSubmitForm(n._getInputValues())},(o="_handlerCloseClick")in(r=d(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._handlerSubmitForm=t,n._popupForm=n._popup.querySelector(".popup__container"),n._button=n._popup.querySelector(".popup__submit"),n}return t=a,(n=[{key:"_getInputValues",value:function(){this._popupInputs=this._popupForm.querySelectorAll(".popup__input");var e={};return this._popupInputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){f(y(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",this._handlerCloseClick)}},{key:"close",value:function(){f(y(a.prototype),"close",this).call(this),this._popupForm.reset(),this._popup.removeEventListener("submit",this._handlerCloseClick)}},{key:"updateTextOnButton",value:function(e){this._button.textContent=e}}])&&p(t.prototype,n),a}(s);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return(k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n,r=e.name,o=e.link;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._popupImage=n._popup.querySelector(".popup__image"),n._popupText=n._popup.querySelector(".popup__image-text"),n._link=o,n._name=r,n}return t=a,(n=[{key:"open",value:function(){k(C(a.prototype),"open",this).call(this),this._popupImage.src=this._link,this._popupImage.alt=this._name,this._popupText.textContent=this._name}}])&&b(t.prototype,n),a}(s);function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(e,t,n){return(L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?P(e):t}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){e.preventDefault(),n._handlerSubmitForm(n.card)},(o="_handlerSubmit")in(r=P(n=i.call(this,t)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._handlerSubmitForm=e,n._formElement=n._popup.querySelector(".popup__container"),n}return t=a,(n=[{key:"open",value:function(e){L(T(a.prototype),"open",this).call(this),this.card=e}},{key:"close",value:function(){L(T(a.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){L(T(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",this._handlerSubmit)}}])&&O(t.prototype,n),a}(s);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t,this._token=n}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._link,"/cards"),{headers:{authorization:this._token}}).then(this._checkStatus)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._link,"/users/me"),{headers:{authorization:this._token}}).then(this._checkStatus)}},{key:"updateUserInfo",value:function(e,t){return fetch("".concat(this._link,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then(this._checkStatus)}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._link,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then(this._checkStatus)}},{key:"_checkStatus",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"addLikeUpdate",value:function(e){return fetch("".concat(this._link,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}},{key:"deleteLikeUpdate",value:function(e){return fetch("".concat(this._link,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._link,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._checkStatus)}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._link,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._checkStatus)}}])&&R(t.prototype,n),e}(),A={formSelector:".popup__container",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error",errorMessageClass:"popup__input-error_visible"},B=document.querySelector(".profile__button-edit"),U=document.querySelector(".profile__add-button"),D=document.querySelector(".profile__overlay"),F=document.querySelector(".popup_type_edit"),N=document.querySelector(".popup_type_add"),V=document.querySelector(".popup_type_update-avatar"),M=F.querySelector(".popup__container"),z=N.querySelector(".popup__container"),J=V.querySelector(".popup__container"),H=document.querySelector(".popup__input_type_name"),$=document.querySelector(".popup__input_type_description");function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K=new u({userNameSelector:".profile__name",userInfoSelector:".profile__description",userAvatarSelector:".profile__avatar"}),Q=new t(A,M);Q.enableValidation();var W=new t(A,z);W.enableValidation();var X=new t(A,J);X.enableValidation();var Y=new x("https://mesto.nomoreparties.co/v1/cohort-26","abf7489c-028b-40af-8a54-88899dd941f0"),Z=new q((function(e){Y.deleteCard(e.cardId).then((function(t){"Пост удалён"===t.message&&(e.deleteMePlease(),Z.close())})).catch((function(e){return console.log(e)}))}),".popup_type_delete");function ee(e){Z.open(e),Z.setEventListeners()}function te(e){(e.isLiked()?Y.deleteLikeUpdate(e.cardId):Y.addLikeUpdate(e.cardId)).then((function(t){e.likes=t.likes,e.handleToggleLike(),e.updateLikes(t.likes.length)})).catch((function(e){return console.log(e)}))}function ne(e,t){var n=new w({name:e,link:t},".popup_type_image");n.open(),n.setEventListeners()}function re(e,t){return new r(e,".element-template",ne,ee,te,t).createCard()}Promise.all([Y.getUserInfo(),Y.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1];K.setUserInfo(o.name,o.about,o._id),K.setUserAvatar(o.avatar);var u=new i({renderer:function(e){var t=re(e,o._id);u.reverseItem(t)}},".elements");u.renderItems(a);var c=new v(".popup_type_edit",(function(e){c.updateTextOnButton("Сохранение..."),Y.updateUserInfo(e.authorName,e.authorDescription).then((function(){c.updateTextOnButton("Сохранить"),K.setUserInfo(e.authorName,e.authorDescription),c.close()})).catch((function(e){return console.log(e)}))}));B.addEventListener("click",(function(){var e=K.getUserInfo();H.value=e.name,$.value=e.info,c.open(),Q.checkFormState()})),c.setEventListeners();var s=new v(".popup_type_update-avatar",(function(e){s.updateTextOnButton("Сохранение..."),Y.updateAvatar(e.avatar).then((function(e){s.updateTextOnButton("Сохранить"),K.setUserAvatar(e.avatar),s.close()})).catch((function(e){return console.log(e)}))}));s.setEventListeners(),D.addEventListener("click",(function(){s.open(),X.checkFormState()}));var l=new v(".popup_type_add",(function(e){l.updateTextOnButton("Создание..."),Y.addNewCard(e.name,e.link).then((function(e){l.updateTextOnButton("Создать");var t=re(e,o._id);u.addItem(t),l.close()}))}));l.setEventListeners(),U.addEventListener("click",(function(){l.open(),W.checkFormState()}))})).catch((function(e){return console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,